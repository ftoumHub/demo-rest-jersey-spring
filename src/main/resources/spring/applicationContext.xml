<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"	
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans	
		http://www.springframework.org/schema/beans/spring-beans.xsd
	 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx.xsd
		 
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd">
 
	<context:component-scan base-package="org.codingpedia.demo.rest.*" />
 
	<!-- ************ JPA configuration *********** -->
	<tx:annotation-driven/>
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory" />
    </bean>

    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="persistenceXmlLocation" value="classpath:config/persistence-demo.xml" />
        <property name="persistenceUnitName" value="demoRestPersistence" />        
        <property name="dataSource" ref="restDemoDS" />
        <property name="packagesToScan" value="org.codingpedia.demo.*" />
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <!--property name="showSql" value="true" /-->
                <property name="databasePlatform" value="org.hibernate.dialect.PostgreSQL82Dialect" />
            </bean>
        </property>

        <!-- ðŸ”¥ Ici on injecte les propriÃ©tÃ©s Hibernate -->
        <property name="jpaPropertyMap">
            <map>
                <entry key="hibernate.jdbc.lob.non_contextual_creation" value="true"/>
                <entry key="hibernate.format_sql" value="true"/>
            </map>
        </property>
    </bean>
    	
	<bean id="podcastDao"       class="org.codingpedia.demo.rest.dao.PodcastDaoJPA2Impl"/>
    <bean id="podcastService"   class="org.codingpedia.demo.rest.service.PodcastServiceImpl" />
    <bean id="podcastsResource" class="org.codingpedia.demo.rest.resource.podcast.PodcastsResource" />

    <bean id="versionService"   class="org.codingpedia.demo.rest.resource.manifest.ManifestService" />
<!--
	<bean id="restDemoDS" class="org.springframework.jndi.JndiObjectFactoryBean" scope="singleton">
	    <property name="jndiName" value="java:comp/env/jdbc/restDemoDB" />
	    <property name="resourceRef" value="true" />        
	</bean>
-->
    <bean id="restDemoDS"       class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass" value="org.postgresql.Driver"/>
        <property name="jdbcUrl" value="jdbc:postgresql://localhost:5432/demo_rest_jersey"/>
        <property name="user" value="demo_rest_jersey"/>
        <property name="password" value="demo_rest_jersey"/>

        <!-- c3p0 config -->
        <property name="minPoolSize" value="5"/>
        <property name="maxPoolSize" value="20"/>
        <property name="acquireIncrement" value="1"/>
        <property name="maxStatements" value="50"/>
        <property name="idleConnectionTestPeriod" value="300"/>
        <property name="maxIdleTime" value="600"/>
        <property name="autoCommitOnClose" value="false"/>
    </bean>
</beans>